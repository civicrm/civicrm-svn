-- /********************************************************************
-- *
-- * MySQL Script for location tables upgradation, from 1.9 -> 2.0
-- *
-- *********************************************************************/



-- /*******************************************************
-- *
-- * Add civicrm_loc_block table
-- *
-- *******************************************************/

CREATE TABLE IF NOT EXISTS `civicrm_loc_block` (
    id int(10) unsigned NOT NULL auto_increment,
    `address_id` int(10) unsigned NULL DEFAULT NULL,
    `email_id` int(10) unsigned NULL DEFAULT NULL,
    `phone_id` int(10) unsigned NULL DEFAULT NULL,
    `im_id` int(10) unsigned NULL DEFAULT NULL,
    `address_2_id` int(10) unsigned NULL DEFAULT NULL,
    `email_2_id` int(10) unsigned NULL DEFAULT NULL,
    `phone_2_id` int(10) unsigned NULL DEFAULT NULL,
    `im_2_id` int(10) unsigned NULL DEFAULT NULL,
    name varchar(255) NULL DEFAULT NULL,
    PRIMARY KEY (id),
    CONSTRAINT `FK_civicrm_loc_block_address_id` FOREIGN KEY (`address_id`) REFERENCES `civicrm_address` (`id`),
    CONSTRAINT `FK_civicrm_loc_block_email_id` FOREIGN KEY (`email_id`) REFERENCES `civicrm_email` (`id`),
    CONSTRAINT `FK_civicrm_loc_block_phone_id` FOREIGN KEY (`phone_id`) REFERENCES `civicrm_phone` (`id`),
    CONSTRAINT `FK_civicrm_loc_block_im_id` FOREIGN KEY (`im_id`) REFERENCES `civicrm_im` (`id`),
    CONSTRAINT `FK_civicrm_loc_block_address_2_id` FOREIGN KEY (`address_2_id`) REFERENCES `civicrm_address` (`id`),
    CONSTRAINT `FK_civicrm_loc_block_email_2_id` FOREIGN KEY (`email_2_id`) REFERENCES `civicrm_email` (`id`),
    CONSTRAINT `FK_civicrm_loc_block_phone_2_id` FOREIGN KEY (`phone_2_id`) REFERENCES `civicrm_phone` (`id`),
    CONSTRAINT `FK_civicrm_loc_block_im_2_id` FOREIGN KEY (`im_2_id`) REFERENCES `civicrm_im` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;


-- /*******************************************************
-- *
-- * Alter civicrm_address table
-- *
-- *******************************************************/

ALTER TABLE `civicrm_address`
    ADD `contact_id` int(10) unsigned NULL DEFAULT NULL AFTER id,
    ADD `location_type_id` int(10) unsigned NULL DEFAULT NULL AFTER contact_id,
    ADD `is_primary` tinyint(4) NULL DEFAULT '0' AFTER location_type_id,
    ADD `is_billing` tinyint(4) NULL DEFAULT '0' AFTER is_primary,    
    ADD INDEX `index_location_type` (`location_type_id`),
    ADD INDEX `index_is_primary` (`is_primary`),
    ADD INDEX `index_is_billing` (`is_billing`),
    DROP note,
    DROP FOREIGN KEY `FK_civicrm_address_county_id`,
    DROP FOREIGN KEY `FK_civicrm_address_state_province_id`,
    DROP FOREIGN KEY `FK_civicrm_address_country_id`,
    ADD CONSTRAINT `FK_civicrm_address_contact_id` FOREIGN KEY (`contact_id`) REFERENCES `civicrm_contact` (`id`) ON DELETE CASCADE;


ALTER TABLE `civicrm_address`
    ADD CONSTRAINT `FK_civicrm_address_county_id` FOREIGN KEY (`county_id`) REFERENCES `civicrm_county` (`id`) ON DELETE SET NULL,
    ADD CONSTRAINT `FK_civicrm_address_state_province_id` FOREIGN KEY (`state_province_id`) REFERENCES `civicrm_state_province` (`id`) ON DELETE SET NULL,
    ADD CONSTRAINT `FK_civicrm_address_country_id` FOREIGN KEY (`country_id`) REFERENCES `civicrm_country` (`id`) ON DELETE SET NULL;


-- /*******************************************************
-- *
-- * Alter civicrm_email table
-- *
-- *******************************************************/

ALTER TABLE `civicrm_email`
    ADD `contact_id` int(10) unsigned NULL DEFAULT NULL AFTER id,
    ADD `location_type_id` int(10) unsigned NULL DEFAULT NULL AFTER contact_id,
    ADD `is_billing` tinyint(4) NULL DEFAULT '0' AFTER is_primary,    
    ADD INDEX `index_location_type` (`location_type_id`),
    ADD INDEX `index_is_primary` (`is_primary`),
    ADD INDEX `index_is_billing` (`is_billing`),
    ADD CONSTRAINT `FK_civicrm_email_contact_id` FOREIGN KEY (`contact_id`) REFERENCES `civicrm_contact` (`id`) ON DELETE CASCADE;


-- /*******************************************************
-- *
-- * Alter civicrm_phone table
-- *
-- *******************************************************/

ALTER TABLE `civicrm_phone`
    ADD `contact_id` int(10) unsigned NULL DEFAULT NULL AFTER id,
    ADD `location_type_id` int(10) unsigned NULL DEFAULT NULL AFTER contact_id,
    ADD `is_billing` tinyint(4) NULL DEFAULT '0' AFTER is_primary,   
    ADD INDEX `index_location_type` (`location_type_id`),
    ADD INDEX `index_is_primary` (`is_primary`),
    ADD INDEX `index_is_billing` (`is_billing`),
    ADD CONSTRAINT `FK_civicrm_phone_contact_id` FOREIGN KEY (`contact_id`) REFERENCES `civicrm_contact` (`id`) ON DELETE CASCADE;


-- /*******************************************************
-- *
-- * Alter civicrm_im table
-- *
-- *******************************************************/

ALTER TABLE `civicrm_im`
    ADD `contact_id` int(10) unsigned NULL DEFAULT NULL AFTER id,
    ADD `location_type_id` int(10) unsigned NULL DEFAULT NULL AFTER contact_id,
    ADD `is_billing` tinyint(4) NULL DEFAULT '0' AFTER is_primary,    
    ADD INDEX `index_location_type` (`location_type_id`),
    ADD INDEX `index_is_primary` (`is_primary`),
    ADD INDEX `index_is_billing` (`is_billing`),
    ADD CONSTRAINT `FK_civicrm_im_contact_id` FOREIGN KEY (`contact_id`) REFERENCES `civicrm_contact` (`id`) ON DELETE CASCADE;


-- /*******************************************************
-- *
-- * Modify civicrm_event table
-- *
-- *******************************************************/

ALTER TABLE `civicrm_event`
    ADD `participant_listing_id` int(10) unsigned NULL DEFAULT '0' COMMENT 'Should we expose the participant list? Implicit FK to civicrm_option_value where option_group = participant_listing.' AFTER event_type_id,
    ADD `loc_block_id` int(10) unsigned NULL DEFAULT NULL COMMENT 'FK to Location Block ID' AFTER is_show_location,
    ADD `receipt_text` varchar(255) NULL DEFAULT NULL COMMENT 'Receipt Text for off-line event participation' COLLATE utf8_unicode_ci AFTER loc_block_id,
    ADD `default_role_id` int(10) unsigned NULL DEFAULT '1' COMMENT 'Participant role ID. Implicit FK to civicrm_option_value where option_group = participant_role.' AFTER receipt_text,
    ADD INDEX `index_participant_listing_id` (`participant_listing_id`),
    ADD CONSTRAINT `FK_civicrm_event_loc_block_id` FOREIGN KEY (`loc_block_id`) REFERENCES `civicrm_loc_block` (`id`) ON DELETE CASCADE,
    DROP FOREIGN KEY `FK_civicrm_event_payment_processor_id`;


ALTER TABLE `civicrm_event`
    ADD CONSTRAINT `FK_civicrm_event_payment_processor_id` FOREIGN KEY (`payment_processor_id`) REFERENCES `civicrm_payment_processor` (`id`) ON DELETE SET NULL;



-- /*******************************************************
-- *
-- * Modify civicrm_domain table
-- *
-- *******************************************************/

ALTER TABLE `civicrm_domain`
    ADD `loc_block_id` int(10) unsigned NULL DEFAULT NULL COMMENT 'FK to Location Block ID. This is specifically not an FK to avoid circular constraints' AFTER version,
    DROP `config_frontend`;



-- /*******************************************************
-- *
-- * Modify civicrm_group_contact table
-- *
-- *******************************************************/

ALTER TABLE `civicrm_group_contact` 
    ADD `loc_block_id` int(10) unsigned NULL DEFAULT NULL COMMENT 'FK to Location Block ID. This is specifically not an FK to avoid circular constraints' AFTER location_id,
    DROP FOREIGN KEY `FK_civicrm_group_contact_contact_id`,
    DROP FOREIGN KEY `FK_civicrm_group_contact_group_id`;

ALTER TABLE `civicrm_group_contact`
    ADD CONSTRAINT `FK_civicrm_group_contact_contact_id` FOREIGN KEY (`contact_id`) REFERENCES `civicrm_contact` (`id`) ON DELETE CASCADE,
    ADD CONSTRAINT `FK_civicrm_group_contact_group_id` FOREIGN KEY (`group_id`) REFERENCES `civicrm_group` (`id`) ON DELETE CASCADE;



-- /**********************************************************
-- *
-- * Update location data/values
-- *
-- ***********************************************************/

-- * Update address data/values

UPDATE civicrm_address ca, civicrm_location cl 

SET 
    ca.contact_id       = cl.entity_id,
    ca.is_primary       = cl.is_primary,
    ca.location_type_id = cl.location_type_id

WHERE cl.id = ca.location_id AND cl.entity_table = 'civicrm_contact';


-- * Update email data/values

UPDATE civicrm_email ce, civicrm_location cl 

SET 
    ce.contact_id       = cl.entity_id,
    ce.location_type_id = cl.location_type_id,
    ce.is_primary       = cl.is_primary

WHERE cl.id = ce.location_id AND cl.entity_table = 'civicrm_contact';


-- * Update phone data/values

UPDATE civicrm_phone cp, civicrm_location cl 

SET 
    cp.contact_id       = cl.entity_id,
    cp.location_type_id = cl.location_type_id,
    cp.is_primary       = cl.is_primary

WHERE cl.id = cp.location_id AND cl.entity_table = 'civicrm_contact';


-- * Update im data/values

UPDATE civicrm_im ci, civicrm_location cl 

SET 
    ci.contact_id       = cl.entity_id,
    ci.location_type_id = cl.location_type_id,
    ci.is_primary       = cl.is_primary

WHERE cl.id = ci.location_id AND cl.entity_table = 'civicrm_contact';


-- * Update civicrm_loc_block data/values

INSERT INTO civicrm_loc_block (address_id, email_id, phone_id, im_id, email_2_id, phone_2_id, im_2_id)

SELECT ca1.id, ce1.id, cp1.id, ci1.id, ce2.id, cp2.id, ci2.id 

FROM   civicrm_location  cl
    
LEFT JOIN civicrm_address ca1 ON (ca1.location_id = cl.id)
LEFT JOIN civicrm_email   ce1 ON (ce1.location_id = cl.id AND ce1.is_primary = 1) 
LEFT JOIN civicrm_email   ce2 ON (ce2.location_id = cl.id AND ce2.is_primary = 0) 
LEFT JOIN civicrm_phone   cp1 ON (cp1.location_id = cl.id AND cp1.is_primary = 1)
LEFT JOIN civicrm_phone   cp2 ON (cp2.location_id = cl.id AND cp2.is_primary = 0)
LEFT JOIN civicrm_im      ci1 ON (ci1.location_id = cl.id AND ci1.is_primary = 1)
LEFT JOIN civicrm_im      ci2 ON (ci2.location_id = cl.id AND ci2.is_primary = 0)

WHERE cl.entity_table IN ('civicrm_event', 'civicrm_domain');


-- * Update loc_block_id of civicrm_event and civicrm_domain

UPDATE civicrm_loc_block clb

LEFT JOIN civicrm_address  ca  ON (ca.id = clb.address_id) 
LEFT JOIN civicrm_location cle ON (cle.id = ca.location_id AND cle.entity_table = 'civicrm_event') 
LEFT JOIN civicrm_event    ce  ON (ce.id = cle.entity_id) 
LEFT JOIN civicrm_location cld ON (cld.id = ca.location_id AND cld.entity_table = 'civicrm_domain') 
LEFT JOIN civicrm_domain   cd  ON (cd.id = cld.entity_id) 

SET 
    ce.loc_block_id  = clb.id,
    cd.loc_block_id  = clb.id;



-- Set location_type_ids for those not present 

UPDATE civicrm_address
SET    location_type_id = 1
WHERE  location_type_id IS NULL AND contact_id IS NULL;

UPDATE civicrm_email
SET    location_type_id = 1
WHERE  location_type_id IS NULL AND contact_id IS NULL;

UPDATE civicrm_phone
SET    location_type_id = 1
WHERE  location_type_id IS NULL AND contact_id IS NULL;

UPDATE civicrm_im
SET    location_type_id = 1
WHERE  location_type_id IS NULL AND contact_id IS NULL;
