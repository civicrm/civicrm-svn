<?php

/*
 +--------------------------------------------------------------------+
 | CiviCRM version 3.1                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2010                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007.                                       |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License along with this program; if not, contact CiviCRM LLC       |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2010
 * $Id$
 *
 */

require_once 'CiviTestCase.php';

class Browser_RandomClickThrough extends CiviTestCase {

  var $webUser;
  
  function get_info() {
    return array(
      'name' => 'Random Click Through Tester',
      'description' => 'Randomly click CiviCRM URLs and test for error.',
      'group' => 'CiviCRM Browser Tests',
    );
  }
  
  function setUp() {
    parent::setUp();

    $this->drupalModuleEnable('civicrm');
    $this->webUser = $this->drupalCreateUserRolePerm( $this->allPermissions( ) );
    $this->drupalLoginUser($this->webUser);

  }

  function select( &$page, &$test ) {
      foreach ( $page as $url ) {
          if ( ! in_array( $url, $test ) && 
               rand( 0, 100) % 3 )  {
              $test[] = $url;
          }
      }
  }

  /**
   * click urls of a civicrm page and ensure we do not get a fatal error message
   */
  function testClickURL( $linksToCheck = 5 )
  {
      $url = CRM_Utils_System::url( 'civicrm/dashboard', 'reset=1' );
      $url = CRM_Utils_System::url( 'civicrm/admin/locationType', 'reset=1' );
      $testURLs = array( $url );
      $seen      = array( );
      $current   = 0;

      while ( true ) {
          if ( count( $testURLs ) <= $current ) {
              return;
          }

          $url = $testURLs[$current];
          if ( array_key_exists( $url, $seen ) ) {
              continue;
          }

          $pageURLs = array( );
          $this->checkPage( $url, $pageURLs );
          $this->select( $pageURLs, $testURLs );

          $seen[$url] = 1;
          if ( count( $seen ) >= $linksToCheck ) {
              break;
          }
          $current++;
      }

      $this->assertTrue( count( $seen ) == $linksToCheck,
                         ts( '[browser] returned all links' ) );
  }

  function checkPage( $url, &$pageURLs ) {
      $ret = $this->civiGetURL( $url );
      $this->errorPage( $ret, $url );

      $urls = $this->_browser->_page->getUrls( );

      foreach ( $urls as $url ) {
          if ( $this->isCiviURL( $url ) ) {
              $pageURLs[] = $url;
          }
      }
  }

}
