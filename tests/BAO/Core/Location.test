<?php

/*
 +--------------------------------------------------------------------+
 | CiviCRM version 2.1                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2008                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007.                                       |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License along with this program; if not, contact CiviCRM LLC       |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2008
 * $Id$
 *
 */

require_once 'CiviTestCase.php';
require_once 'Contact.php';

class BAO_Core_Location extends CiviTestCase 
{
    
    function get_info( ) 
    {
        return array(
                     'name'        => 'Location BAOs',
                     'description' => 'Test all Core_BAO_Location methods.',
                     'group'       => 'CiviCRM BAO Tests',
                     );
    }
    
    function setUp( ) 
    {
        parent::setUp();
    }
    
    function testCreateWithMissingParams( )
    {
        $contactId = Contact::createIndividual( );
        $params = array( 'contact_id'       => $contactId,
                         'street_address' => 'Saint Helier St' );
        
        require_once 'CRM/Core/BAO/Location.php';
        CRM_Core_BAO_Location::create( $params );
        
        //Now check DB for Address
        $this->assertDBNull( 'CRM_Core_DAO_Address', 'Saint Helier St', 'id', 'street_address', 
                             'Database check, Address created successfully.' );
        
        //cleanup DB by deleting the contact
        Contact::delete( $contactId );
    }
    
    /**
     * create() method
     * create various elements of location block
     * without civicrm_loc_block entry
     */
    
    function testCreateWithoutLocBlock( )
    {
        $contactId = Contact::createIndividual( );
        
        //create various element of location block 
        //like address, phone, email, openid, im.
        $params['location'][1] = array ( 'location_type_id'                               => 1,
                                         'is_primary'                                     => 1,
                                         'address' =>  array ( 
                                                              'street_address'            => 'Saint Helier St',
                                                              'supplemental_address_1'    => 'Hallmark Ct',
                                                              'supplemental_address_2'    => 'Jersey Village',
                                                              'city'                      => 'Newark',
                                                              'postal_code'               => '01903',
                                                              'country_id'                => 1228,
                                                              'state_province_id'         => 1029,
                                                              'geo_code_1'                => '18.219023',
                                                              'geo_code_2'                => '-105.00973',
                                                              ),
                                         'email'   => array ( 
                                                             '1' => array ( 'email'       => 'john.smith@example.org' ), 
                                                             ),
                                         'phone'   => array (
                                                             '1' => array (
                                                                           'phone_type'   => 'Phone',
                                                                           'phone'        => '303443689',
                                                                           ),
                                                             '2' => array (
                                                                           'phone_type'   => 'Mobile',
                                                                           'phone'        => '9833910234',
                                                                           ),
                                                             ),
                                         'openid'  => array (
                                                             '1' => array ( 'openid'      => 'http://civicrm.org' ),
                                                             ),
                                         'im'      => array (
                                                             '1' => array ( 'name'        => 'jane.doe',
                                                                            'provider_id' => 1
                                                                            ),
                                                             ),
                                         );
        
        $params['contact_id'] = $contactId;
        
        require_once 'CRM/Core/BAO/Location.php';
        CRM_Core_BAO_Location::create( $params );
        
        //Now check DB for contact
        $searchParams = array( 'contact_id'              => $contactId, 
                               'location_type_id'        => 1, 
                               'is_primary'              => 1 );
        $compareParams = array( 'street_address'         => 'Saint Helier St',
                                'supplemental_address_1' => 'Hallmark Ct',
                                'supplemental_address_2' => 'Jersey Village',
                                'city'                   => 'Newark',
                                'postal_code'            => '01903',
                                'country_id'             => 1228,
                                'state_province_id'      => 1029,
                                'geo_code_1'             => '18.219023',
                                'geo_code_2'             => '-105.00973' );
        $this->assertDBCompareValues( 'CRM_Core_DAO_Address', $searchParams, $compareParams );
        
        $compareParams = array( 'email'                  => 'john.smith@example.org' );
        $this->assertDBCompareValues('CRM_Core_DAO_Email', $searchParams, $compareParams );
        
        $compareParams = array ( 'openid'                => 'http://civicrm.org' );
        $this->assertDBCompareValues('CRM_Core_DAO_OpenID', $searchParams, $compareParams );
        
        $compareParams = array( 'name'                   => 'jane.doe',
                                'provider_id'            => 1 );
        $this->assertDBCompareValues('CRM_Core_DAO_IM', $searchParams, $compareParams );
        
        $searchParams = array( 'contact_id'              => $contactId, 
                               'location_type_id'        => 1, 
                               'is_primary'              => 1,
                               'phone_type'              => 'Phone' );
        $compareParams = array( 'phone'                  => '303443689' );
        $this->assertDBCompareValues('CRM_Core_DAO_Phone', $searchParams, $compareParams );
        
        $searchParams = array( 'contact_id'              => $contactId, 
                               'location_type_id'        => 1, 
                               'phone_type'              => 'Mobile' );
        $compareParams = array( 'phone'                  => '9833910234' );
        $this->assertDBCompareValues('CRM_Core_DAO_Phone', $searchParams, $compareParams );
        
        //cleanup DB by deleting the contact
        Contact::delete( $contactId );
    }
    
}

?>