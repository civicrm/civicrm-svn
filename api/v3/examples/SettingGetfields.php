<?php



/*
 Demonstrate return from getfields - see subfolder for variants
 */
function setting_getfields_example(){
$params = array( 
  'version' => 3,
);

  require_once 'api/api.php';
  $result = civicrm_api( 'setting','getfields',$params );

  return $result;
}

/*
 * Function returns array of result expected from previous function
 */
function setting_getfields_expectedresult(){

  $expectedResult = array( 
  'is_error' => 0,
  'version' => 3,
  'count' => 40,
  'values' => array( 
      'userFrameworkResourceURL' => array( 
          'group_name' => 'UrlPreferences',
          'name' => 'userFrameworkResourceURL',
          'type' => 'String',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
          'description' => 'CiviCRM Resource URL',
          'validate_callback' => 'CRM_Utils_Rule::url',
        ),
      'imageUploadURL' => array( 
          'group_name' => 'UrlPreferences',
          'name' => 'imageUploadURL',
          'type' => 'String',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
          'description' => 'Image Upload URL',
          'validate_callback' => 'CRM_Utils_Rule::url',
        ),
      'customCSSURL' => array( 
          'group_name' => 'UrlPreferences',
          'name' => 'customCSSURL',
          'type' => 'String',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
          'description' => 'Custom CiviCRM CSS URL',
          'validate_callback' => 'CRM_Utils_Rule::url',
        ),
      'default_renewal_contribution_page' => array( 
          'group_name' => 'Member Preferences',
          'name' => 'default_renewal_contribution_page',
          'type' => 'Integer',
          'html_type' => 'Select',
          'pseudoconstant' => array( 
              'name' => 'contributionPage',
            ),
          'add' => '4.1',
          'title' => 'Default online membership renewal page',
          'is_domain' => '1',
          'is_contact' => 0,
          'description' => 'If you select a default online contribution page for self-service membership renewals, a "renew" link pointing to that page will be displayed on the Contact Dashboard for memberships which were entered offline. You will need to ensure that the membership block for the selected online contribution page includes any currently available memberships.',
        ),
      'is_enabled' => array( 
          'group_name' => 'Multi Site Preferences',
          'name' => 'is_enabled',
          'type' => 'Integer',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
          'description' => 'Multisite is enabled',
        ),
      'domain_group_id' => array( 
          'group_name' => 'Multi Site Preferences',
          'name' => 'domain_group_id',
          'type' => 'Integer',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
          'description' => 'Image Upload URL',
        ),
      'event_price_set_domain_id' => array( 
          'group_name' => 'Multi Site Preferences',
          'name' => 'event_price_set_domain_id',
          'type' => 'Integer',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'uniq_email_per_site' => array( 
          'group_name' => 'Multi Site Preferences',
          'name' => 'uniq_email_per_site',
          'type' => 'Integer',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'address_standardization_provider' => array( 
          'group_name' => 'Address Standardization Preferences',
          'name' => 'address_standardization_provider',
          'type' => 'String',
          'html_type' => 'Select',
          'add' => '4.1',
          'title' => 'Address Standardization Provider.',
          'is_domain' => '1',
          'is_contact' => 0,
          'help_text' => 'CiviCRM includes an optional plugin for interfacing with the United States Postal Services (USPS) Address Standardization web service. You must register to use the USPS service at https://www.usps.com/business/webtools-address-information.htm. If you are approved, they will provide you with a User ID and the URL for the service. Plugins for other address standardization services may be available from 3rd party developers. If installed, they will be included in the drop-down below. ',
        ),
      'address_standardization_userid' => array( 
          'group_name' => 'Address Standardization Preferences',
          'name' => 'address_standardization_userid',
          'type' => 'String',
          'html_type' => 'Text',
          'add' => '4.1',
          'title' => 'Web service user ID..',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'address_standardization_url' => array( 
          'group_name' => 'Address Standardization Preferences',
          'name' => 'address_standardization_url',
          'type' => 'Text',
          'html_type' => 'Text',
          'add' => '4.1',
          'title' => 'Web service user ID..',
          'is_domain' => '1',
          'is_contact' => 0,
          'help_text' => 'Web service URL.',
          'validate_callback' => 'CRM_Utils_Rule::url',
        ),
      'tag_unconfirmed' => array( 
          'group_name' => 'Campaign Preferences',
          'name' => 'tag_unconfirmed',
          'type' => 'String',
          'html_type' => 'Text',
          'default' => 'Unconfirmed',
          'add' => '4.1',
          'title' => 'Tag for Unconfirmed Petition Signers',
          'is_domain' => '1',
          'is_contact' => 0,
          'help_text' => 'If set, new contacts that are created when signing a petition are assigned a tag of this name.',
        ),
      'petition_contacts' => array( 
          'group_name' => 'Campaign Preferences',
          'name' => 'petition_contacts',
          'type' => 'String',
          'html_type' => 'Text',
          'default' => 'Petition Contacts',
          'add' => '4.1',
          'title' => 'Petition Signers Group',
          'is_domain' => '1',
          'is_contact' => 0,
          'help_text' => 'If set, new contacts that are created when signing a petition are assigned a tag of this name.',
        ),
      'contact_view_options' => array( 
          'group_name' => 'CiviCRM Preferences',
          'name' => 'contact_view_options',
          'type' => 'String',
          'html_type' => 'Checkboxes',
          'add' => '4.1',
          'title' => 'Tag for Unconfirmed Petition Signers',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'contact_edit_options' => array( 
          'group_name' => 'CiviCRM Preferences',
          'name' => 'contact_edit_options',
          'type' => 'String',
          'html_type' => 'Text',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'advanced_search_options' => array( 
          'group_name' => 'CiviCRM Preferences',
          'name' => 'advanced_search_options',
          'type' => 'String',
          'html_type' => 'Text',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'user_dashboard_options' => array( 
          'group_name' => 'CiviCRM Preferences',
          'name' => 'user_dashboard_options',
          'type' => 'String',
          'html_type' => 'Text',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'address_options' => array( 
          'group_name' => 'CiviCRM Preferences',
          'name' => 'address_options',
          'type' => 'String',
          'html_type' => 'Text',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'address_format' => array( 
          'group_name' => 'CiviCRM Preferences',
          'name' => 'address_format',
          'type' => 'String',
          'html_type' => 'Text',
          'default' => '{contact.address_name}\n{contact.street_address}\n{contact.supplemental_address_1}\n{contact.supplemental_address_2}\n{contact.city}{, }{contact.state_province}{ }{contact.postal_code}\n{contact.country}',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'mailing_format' => array( 
          'group_name' => 'CiviCRM Preferences',
          'name' => 'mailing_format',
          'type' => 'String',
          'html_type' => 'Text',
          'default' => '{contact.addressee}\n{contact.street_address}\n{contact.supplemental_address_1}\n{contact.supplemental_address_2}\n{contact.city}{, }{contact.state_province}{ }{contact.postal_code}\n{contact.country}',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'display_name_format' => array( 
          'group_name' => 'CiviCRM Preferences',
          'name' => 'display_name_format',
          'type' => 'String',
          'html_type' => 'Text',
          'default' => '{contact.individual_prefix}{ }{contact.first_name}{ }{contact.last_name}{ }{contact.individual_suffix}',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'sort_name_format' => array( 
          'group_name' => 'CiviCRM Preferences',
          'name' => 'sort_name_format',
          'type' => 'String',
          'html_type' => 'Text',
          'default' => '{contact.last_name}{, }{contact.first_name}',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'editor_id' => array( 
          'group_name' => 'CiviCRM Preferences',
          'name' => 'editor_id',
          'type' => 'String',
          'html_type' => 'Text',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'contact_ajax_check_similar' => array( 
          'group_name' => 'CiviCRM Preferences',
          'name' => 'contact_ajax_check_similar',
          'type' => 'String',
          'html_type' => 'Text',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'activity_assignee_notification' => array( 
          'group_name' => 'CiviCRM Preferences',
          'name' => 'activity_assignee_notification',
          'type' => 'String',
          'html_type' => 'Text',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'contact_autocomplete_options' => array( 
          'group_name' => 'CiviCRM Preferences',
          'name' => 'contact_autocomplete_options',
          'type' => 'String',
          'html_type' => 'Text',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'contact_reference_options' => array( 
          'group_name' => 'CiviCRM Preferences',
          'name' => 'contact_reference_options',
          'type' => 'String',
          'html_type' => 'Text',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'enable_cart' => array( 
          'group_name' => 'Event Preferences',
          'name' => 'enable_cart',
          'type' => 'String',
          'html_type' => 'Text',
          'add' => '4.1',
          'title' => 'Tag for Unconfirmed Petition Signers',
          'is_domain' => '1',
          'is_contact' => 0,
          'help_text' => 'If set, new contacts that are created when signing a petition are assigned a tag of this name.',
        ),
      'profile_double_optin' => array( 
          'group_name' => 'Mailing Preferences',
          'name' => 'profile_double_optin',
          'type' => 'Integer',
          'html_type' => 'checkbox',
          'default' => 0,
          'add' => '4.1',
          'title' => 'Enable Double Opt-in for Profile Group(s) field',
          'is_domain' => '1',
          'is_contact' => 0,
          'description' => 'When CiviMail is enabled, users who "subscribe" to a group from a profile Group(s) checkbox will receive a confirmation email. They must respond (opt-in) before they are added to the group.',
        ),
      'track_civimail_replies' => array( 
          'group_name' => 'Mailing Preferences',
          'name' => 'track_civimail_replies',
          'type' => 'Integer',
          'html_type' => 'checkbox',
          'default' => 0,
          'add' => '4.1',
          'title' => 'Enable Double Opt-in for Profile Group(s) field',
          'is_domain' => '1',
          'is_contact' => 0,
          'description' => 'When CiviMail is enabled, users who "subscribe" to a group from a profile Group(s) checkbox will receive a confirmation email. They must respond (opt-in) before they are added to the group.',
          'validate_callback' => 'CRM_Core_BAO_Setting::validateBoolSetting',
        ),
      'civimail_workflow' => array( 
          'group_name' => 'Mailing Preferences',
          'name' => 'civimail_workflow',
          'type' => 'Integer',
          'html_type' => 'checkbox',
          'default' => 0,
          'add' => '4.1',
          'title' => 'Enable Double Opt-in for Profile Group(s) field',
          'is_domain' => '1',
          'is_contact' => 0,
          'description' => 'When CiviMail is enabled, users who "subscribe" to a group from a profile Group(s) checkbox will receive a confirmation email. They must respond (opt-in) before they are added to the group.',
        ),
      'civimail_server_wide_lock' => array( 
          'group_name' => 'Mailing Preferences',
          'name' => 'civimail_server_wide_lock',
          'type' => 'Integer',
          'html_type' => 'checkbox',
          'default' => 0,
          'add' => '4.1',
          'title' => 'Enable Double Opt-in for Profile Group(s) field',
          'is_domain' => '1',
          'is_contact' => 0,
          'description' => 'When CiviMail is enabled, users who "subscribe" to a group from a profile Group(s) checkbox will receive a confirmation email. They must respond (opt-in) before they are added to the group.',
        ),
      'mailing_backend' => array( 
          'group_name' => 'Mailing Preferences',
          'name' => 'mailing_backend',
          'type' => 'Array',
          'html_type' => 'checkbox',
          'default' => 0,
          'add' => '4.1',
          'title' => 'Enable Double Opt-in for Profile Group(s) field',
          'is_domain' => '1',
          'is_contact' => 0,
          'description' => 'When CiviMail is enabled, users who "subscribe" to a group from a profile Group(s) checkbox will receive a confirmation email. They must respond (opt-in) before they are added to the group.',
        ),
      'profile_add_to_group_double_optin' => array( 
          'group_name' => 'Mailing Preferences',
          'name' => 'profile_add_to_group_double_optin',
          'type' => 'Integer',
          'html_type' => 'checkbox',
          'default' => 0,
          'add' => '4.1',
          'title' => 'Enable Double Opt-in for Profile Group(s) field',
          'is_domain' => '1',
          'is_contact' => 0,
          'description' => 'When CiviMail is enabled, users who "subscribe" to a group from a profile Group(s) checkbox will receive a confirmation email. They must respond (opt-in) before they are added to the group.',
        ),
      'uploadDir' => array( 
          'group_name' => 'Directory Preferences',
          'name' => 'uploadDir',
          'type' => 'Url',
          'html_type' => 'Text',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
          'help_text' => 'If set, new contacts that are created when signing a petition are assigned a tag of this name.',
        ),
      'imageUploadDir' => array( 
          'group_name' => 'Directory Preferences',
          'name' => 'imageUploadDir',
          'type' => 'Url',
          'html_type' => 'Text',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'customFileUploadDir' => array( 
          'group_name' => 'Directory Preferences',
          'name' => 'customFileUploadDir',
          'type' => 'Url',
          'html_type' => 'Text',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'customTemplateDir' => array( 
          'group_name' => 'Directory Preferences',
          'name' => 'customTemplateDir',
          'type' => 'Url',
          'html_type' => 'Text',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'customPHPPathDir' => array( 
          'group_name' => 'Directory Preferences',
          'name' => 'customPHPPathDir',
          'type' => 'Url',
          'html_type' => 'Text',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
      'extensionsDir' => array( 
          'group_name' => 'Directory Preferences',
          'name' => 'extensionsDir',
          'type' => 'Url',
          'html_type' => 'Text',
          'add' => '4.1',
          'is_domain' => '1',
          'is_contact' => 0,
        ),
    ),
);

  return $expectedResult  ;
}




/*
* This example has been generated from the API test suite. The test that created it is called
* 
* testGetFields and can be found in 
* http://svn.civicrm.org/civicrm/branches/v3.4/tests/phpunit/CiviTest/api/v3/SettingTest.php
* 
* You can see the outcome of the API tests at 
* http://tests.dev.civicrm.org/trunk/results-api_v3
* and review the wiki at
* http://wiki.civicrm.org/confluence/display/CRMDOC/CiviCRM+Public+APIs
* Read more about testing here
* http://wiki.civicrm.org/confluence/display/CRM/Testing
*/