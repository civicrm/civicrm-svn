#!/bin/sh
#
# Copyright 2000-2005 The Apache Software Foundation or its licensors, as
# applicable.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# Apache control script designed to allow an easy command line interface
# to controlling Apache.  Written by Marc Slemko, 1997/08/23
# 
# The exit codes returned are:
#   XXX this doc is no longer correct now that the interesting
#   XXX functions are handled by httpd
#	0 - operation completed successfully
#	1 - 
#	2 - usage error
#	3 - httpd could not be started
#	4 - httpd could not be stopped
#	5 - httpd could not be started during a restart
#	6 - httpd could not be restarted during a restart
#	7 - httpd could not be restarted during a graceful restart
#	8 - configuration syntax error
#
# When multiple arguments are given, only the error from the _last_
# one is reported.  Run "apachectl help" for usage info
#

#echo $ARGV
#echo Arg1 = $1
#echo Arg2 = $2

SERVER_ROOT='/staging/apache-2.0.54'

# ARGV="$@"
ARGV="$1"
PORT="$2"


# echo ARGV = $ARGV
# echo PORT = $PORT
# echo SERVER_ROOT = $SERVER_ROOT

# case $PORT in
# 81) HTTPD_CONF_FILE=$SERVER_ROOT'/conf/httpd.conf.php-4.0.6.mysql-4.0.25'  ;;
# 82) HTTPD_CONF_FILE=$SERVER_ROOT'/conf/httpd.conf.php-4.1.2.mysql-4.0.25'  ;;
# 83) HTTPD_CONF_FILE=$SERVER_ROOT'/conf/httpd.conf.php-4.2.3.mysql-4.0.25'  ;;
# 84) HTTPD_CONF_FILE=$SERVER_ROOT'/conf/httpd.conf.php-4.3.11.mysql-4.1.13' ;;
# 84) HTTPD_CONF_FILE=$SERVER_ROOT'/conf/httpd.conf.php-4.3.11.mysql-4.0.25' ;;
# 85) HTTPD_CONF_FILE=$SERVER_ROOT'/conf/httpd.conf.php-4.4.0.mysql-4.1.13'  ;;
# 86) HTTPD_CONF_FILE=$SERVER_ROOT'/conf/httpd.conf.php-5.0.4.mysql-4.1.13'  ;;
# *)  echo 'Invalid port' $PORT; exit 1 ;;
# esac

case $PORT in
    81) HTTPD_CONF_FILE=$SERVER_ROOT'/conf/httpd.conf.php-4.3.11.mysql-4.0.25'  ;;
    *)  echo 'Invalid port' $PORT; exit 1 ;;
esac


echo 'executing command on port' $PORT 'with config file' $HTTPD_CONF_FILE

#
# |||||||||||||||||||| START CONFIGURATION SECTION  ||||||||||||||||||||
# --------------------                              --------------------
# 
# the path to your httpd binary, including options if necessary
HTTPD='/staging/apache-2.0.54/bin/httpd'

#
# pick up any necessary environment variables
if test -f /staging/apache-2.0.54/bin/envvars; then
  . /staging/apache-2.0.54/bin/envvars
fi

#
# a command that outputs a formatted text version of the HTML at the
# url given on the command line.  Designed for lynx, however other
# programs may work.  
LYNX="lynx -dump"
#
# the URL to your server's mod_status status page.  If you do not
# have one, then status and fullstatus will not work.

# status url should be for all different ports
#STATUSURL="http://localhost:80/server-status"
STATUSURL="http://localhost:"$PORT"/server-status"

#
# Set this variable to a command that increases the maximum
# number of file descriptors allowed per child process. This is
# critical for configurations that use many file descriptors,
# such as mass vhosting, or a multithreaded server.
ULIMIT_MAX_FILES="ulimit -S -n `ulimit -H -n`"
# --------------------                              --------------------
# ||||||||||||||||||||   END CONFIGURATION SECTION  ||||||||||||||||||||

# Set the maximum number of file descriptors allowed per child process.
if [ "x$ULIMIT_MAX_FILES" != "x" ] ; then
    $ULIMIT_MAX_FILES
fi

ERROR=0
if [ "x$ARGV" = "x" ] ; then 
    ARGV="-h"
fi

case $ARGV in
start|stop|restart|graceful)
    $HTTPD -f $HTTPD_CONF_FILE -k $ARGV
    ERROR=$?
    ;;
startssl|sslstart|start-SSL)
    $HTTPD -DSSL -f $HTTPD_CONF_FILE -k start
    ERROR=$?
    ;;
configtest)
    $HTTPD -t -f $HTTPD_CONF_FILE
    ERROR=$?
    ;;
status)
    $LYNX $STATUSURL | awk ' /process$/ { print; exit } { print } '
    ;;
fullstatus)
    $LYNX $STATUSURL
    ;;
*)
    $HTTPD -f $HTTPD_CONF_FILE $ARGV
    ERROR=$?
esac

exit $ERROR
