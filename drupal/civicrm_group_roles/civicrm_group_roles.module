<?php
// $Id: civicrm_group_roles.module,v 1.1.4.2 2008/10/14 00:20:36 matt2000 Exp $

/* @file
 * A simple module that adds a user to groups based on Role.
 * Internal Version identifier - 0.3-beta
 */

/**
 * Implementation of hook_help()
 */
function civicrm_group_roles_help($section, $args = array() ) 
{ 
    switch ($section) { 
    case 'admin/modules#description': 
        return t('Adds users to a matching CiviCRM group on account creation, update, or login for each of their Drupal roles.');
    default :
        return;
    } 
} 


/**
 * Implementation of hook_user().
 */
function civicrm_group_roles_user($op, $edit, &$user, $category = NULL) 
{
    
    $debug_mode = FALSE;
    
    if ($op == 'login' OR $op == 'after_update' OR $op == 'insert') {
        
        //get user's roles, ignoring built-in roles
        if ($op == 'insert') { // $user->roles isn;t set on insert, we have to get them from the form directly...
            $all = user_roles(TRUE);
            $rids = $edit['roles']; //the insert form only stores role ids. :-P
            $rids = is_array($rids) ? $rids : array($rids);
            $roles = array_intersect_key($all, $rids);
        } else {
            $roles = array_diff($user->roles, array('anonymous user', 'authenticated user'));
        }
        
        if ($roles) { // make sure user has other roles other than authenticated
            
            //init
            civicrm_initialize(true);
            require_once 'api/v2/Contact.php';
            require_once 'api/v2/Group.php';
            require_once 'api/v2/GroupContact.php';
            
            //find the contact record
            $params = array('email' => $user->mail);
            $contact =& civicrm_contact_get($params);
            $contact_id = $contact['contact_id'];
            
            if ($contact && isset($contact['contact_id'])) {
                
                //loop over roles
                foreach ($roles as $role) {
                    
                    //find the group for the role
                    $params = array('title' => $role);
                    $groups =& civicrm_group_get($params);
                    
                    if ($groups && count($groups) == 1) {
                        
                        //add the contact
                        $group = current($groups);
                        $contacts = array($contact);
                        $gparams = array('group_id' => $group['id'], 'contact_id' => $contact_id);
                        $result = civicrm_group_contact_add($gparams);
                        
                        if ($result['is_error'] > 0) {
                            $msg = t('Error: Unable to sync role @role', array('@role' => $role) );
                            watchdog('civicrm_group_roles', $msg);
                            if ($debug_mode) drupal_set_message($msg);
                        } elseif ($debug_mode && $result['added'] > 0) {
                            drupal_set_message("Added user $user->name to Group: $role");
                            drupal_set_message(var_export($result, TRUE));
                        } elseif ($debug_mode) {
                            drupal_set_message("User $user->name NOT added to Group: $role");
                            drupal_set_message(var_export($result, TRUE));
                        }
            
                    } elseif ($debug_mode) {
                        $msg = t('CiviCRM group not found for @id', array('@id' => $role));
                        watchdog('civicrm', $msg);
                        drupal_set_message($msg);
                    } //end if $groups
                    
                } //end foreach
                
            } else {
                $msg = t('CiviCRM contact not found for %email', array('%email' => $user->mail));
                watchdog('civicrm',  $msg);
                if ($debug_mode) drupal_set_message($msg);
            } //end if $contact
        } //endif $roles
    } //endif $op
}


/**
 * Implementation of hook_menu().
 */
function civicrm_group_roles_menu( ) 
{
    $items[] = array();
    $items['admin/settings/civicrm_group_roles'] = array(
                                                         'title' => t('CiviGroup Roles Sync'),
                                                         'description' => t('Add/remove association rules and configure settings. Also perform manual synchronization.'),
                                                         'page callback' => 'civicrm_group_roles_show_rules',
                                                         'access callback' => 'user_access',
                                                         'access arguments' => array('access settings'),
                                                         'type' => MENU_NORMAL_ITEM,
                                                         );      
    $items['admin/settings/civicrm_group_roles/show_rules'] = array(
                                                                    'title' => t('List Association Rule(s)'),
                                                                    'access callback' => 'user_access',
                                                                    'access arguments' => array('access settings'),
                                                                    'weight' => -5,
                                                                    'type' => MENU_DEFAULT_LOCAL_TASK,
                                                                    );       
    $items['admin/settings/civicrm_group_roles/add_rule'] = array(
                                                                  'title' => t('Add Association Rule'),
                                                                  'page callback' => 'drupal_get_form',
                                                                  'page arguments' => array('civicrm_group_roles_add_rule_form'),
                                                                  'access callback' => 'user_access',
                                                                  'access arguments' => array('access settings'),
                                                                  'type' => MENU_LOCAL_TASK,
                                                                  ); 
//     $items['admin/settings/civicrm_group_roles/configure'] = array(
//                                                                    'title' => t('Configure'),
//                                                                    'page callback' => 'drupal_get_form',
//                                                                    'page arguments' => array('civicrm_group_roles_configure'),
//                                                                    'access callback' => 'user_access',
//                                                                    'access arguments' => array('access settings'),
//                                                                    'type' => MENU_LOCAL_TASK,
//                                                                    );
//     $items['admin/settings/civicrm_group_roles/manual_sync'] = array(
//                                                                      'title' => t('Manually Synchronize'),
//                                                                      'page callback' => 'drupal_get_form',
//                                                                      'page arguments' => array('civicrm_group_roles_manual_sync'),
//                                                                      'access callback' => 'user_access',
//                                                                      'access arguments' => array('access settings'),
//                                                                      'type' => MENU_LOCAL_TASK,
//                                                                      );        
    return $items;
}

/**
 * Implementation of hook_perm().
 */
function civicrm_group_roles_perm() {
    return array('access settings');
}


/**
 * Show stored association rules and delete rules.
 */
function civicrm_group_roles_show_rules($action = NULL, $id = NULL) 
{
    // get drupal roles
    $roles = user_roles(TRUE);
    
    // get civicrm groups
    civicrm_initialize(true);
    require_once 'api/v2/Group.php';
    $groups =& civicrm_group_get($params);

    //Begin building main output table.
    $header = array(t('Rule ID'), t('Rule Name ("CiviCRM Group" <--> "Drupal Role")'), t('Operation'));
    $data = array( );
    
    $rules = db_query('SELECT * FROM {civicrm_group_roles_rules} ORDER BY id ASC');
    while ( $result = db_fetch_object($rules) ) {
        $data[] = array(
                        check_plain($result->id), 
                        check_plain($groups[$result->group_id]['title'] . " <--> " . $roles[$result->role_id]),
                        l(t('edit'), 'admin/settings/civicrm_group_roles/add_rule' . '/' . check_plain($result->id)) . '&nbsp;&nbsp;' . l(t('delete'), 'admin/settings/civicrm_group_roles/delete' . '/' . check_plain($result->id)),
                        );
    }
    
    if (!empty($data)) {
        $output = t('Use the "Add Association Rule" form to add new rules.');
        $output .= theme('table', $header, $data);
    } else {
        $output = t('There are no rules currently set. Use the "Add Association Rule" form to add one.');
    }
    return $output;
}

/**
 * Implementation of hook_form(). Add/edit association rules.
 *
 * @ingroup forms
 * @see civimember_roles_add_rule_validate()
 * @see civicrm_group_roles_add_rule_submit()
 */
function civicrm_group_roles_add_rule_form($form, $edit_id = NULL) 
{
    // retrieve drupal roles
    $roles = user_roles(TRUE);

    // get civicrm groups
    civicrm_initialize(true);
    require_once "CRM/Core/PseudoConstant.php";
    $groups =& CRM_Core_PseudoConstant::group( );
    
    //Let's get rid of the authenticated role as it is a useless option for this module
    unset($roles[2]);
    
    //Begin add form
    $form = array();      
    $form['add_rule'] = array(
                              '#type' => 'fieldset',
                              '#title' => t('Association Rule'),
                              '#description' => t('Choose a CiviCRM Group and a Drupal Role below.'),
                              '#tree' => TRUE,
                              '#parents' => array('add_rule'), 
                              );   
    $form['add_rule']['select_group'] = array(
                                              '#type' => 'select',
                                              '#title' => t('CiviCRM Group'),
                                              '#options' => array(0 => t('-- Select --')) + $groups,
                                              '#required' => TRUE,
                                              );    
    $form['add_rule']['select_role'] = array(
                                             '#type' => 'select',
                                             '#title' => t('Drupal Role'),
                                             '#options' => array(0 => t('-- Select --')) + $roles,
                                             '#required' => TRUE,
                                             );    
    $form['submit'] = array(
                            '#type' => 'submit',
                            '#value' => t('Add association rule'),
                            );
    
    //Begin edit form
    if (!empty($edit_id) && is_numeric($edit_id)) {
        $default_values = db_fetch_object(db_query('SELECT * FROM {civicrm_group_roles_rules} WHERE id = %d', $edit_id));
        if (!$default_values) {
            drupal_set_message(t('There was an error in obtaining the association rule for edit. Please check your database settings and try again. If you continue to get this error message then try to reinstall CiviGroup Roles Sync.'));
        }
        
        
        //Alter above add form with default values.
        $form['add_rule']['select_group']['#default_value'] = check_plain($default_values->group_id);
        $form['add_rule']['select_role']['#default_value'] = check_plain($default_values->role_id);
        $form['edit_flag'] = array('#type' => 'hidden', '#value' => check_plain($edit_id));
        $form['submit']['#value'] = t('Edit association rule');
    }
    
    return $form;
}


/**
 * Implementation of hook_validate() for the add/edit rule form.
 */
function civicrm_group_roles_add_rule_form_validate($form, &$form_state) 
{
    //Make sure there is a CiviMember Membership Type and a Drupal Role selected.
    if (is_numeric($form_state['values']['add_rule']['select_group']) && is_numeric($form_state['values']['add_rule']['select_role'])) {
        if ($form_state['values']['add_rule']['select_group'] == 0 || $form_state['values']['add_rule']['select_role'] == 0) {
            form_set_error('add_rule', t('You must select both a CiviCRM Group and a Drupal Role from the "Association Rule" section.'));
        }
    } else {
        form_set_error('add_rule', t('Please select CiviCRM Group and Drupal Role.'));
    }
    
    //Validate edit flag if set
    if (isset($form_state['values']['edit_flag']) && !is_numeric($form_state['values']['edit_flag'])) {
        for_set_error('', t('Edit flag was not numeric.'));
    }
}

/**
 * Implementation of hook_submit() for the add/edit rule form.
 */
function civicrm_group_roles_add_rule_form_submit($form, &$form_state) 
{
    //If edit_flag is set then process as an edit form, if not then process as an add form.
    if (isset($form_state['values']['edit_flag'])) {
        $edit_rule = db_query('UPDATE {civicrm_group_roles_rules}
                          SET role_id = %d, group_id = %d
                          WHERE id = %d',
                              (int) $form_state['values']['add_rule']['select_role'],
                              (int) $form_state['values']['add_rule']['select_group'],
                              $form_state['values']['edit_flag']);
        if ($edit_rule) {
            drupal_set_message(t('Your association rule has been edited.'));
        } else {
            drupal_set_message(t('There was an error editing the association rule. Please check your database settings and try again. If you continue to get this error message then try to reinstall CiviGroup Roles Sync.'), $type = 'error');
        }
    } else {
        $add_rule = db_query('INSERT INTO {civicrm_group_roles_rules} (role_id, group_id )
                          VALUES( %d, %d)', 
                             (int) $form_state['values']['add_rule']['select_role'], 
                             (int) $form_state['values']['add_rule']['select_group'] 
                             );
        if ($add_rule) {
            drupal_set_message(t('Your association rule has been added.'));
        } else {
            drupal_set_message(t('There was an error adding the association rule. Please check your database settings and try again. If you continue to get this error message then try to reinstall CiviGroup Roles Sync.'), $type = 'error');
        }
    }
}
