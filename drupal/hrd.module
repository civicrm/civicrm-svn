<?php

/*
 +--------------------------------------------------------------------+
 | CiviCRM version 2.1                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2008                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007.                                       |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License along with this program; if not, contact CiviCRM LLC       |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2008
 * $Id$
 *
 */

function hrd_initialize( ) {
    static $_initialized = false;

    if ( ! $_initialized ) {
        civicrm_initialize( );
    }

}

function hrd_civicrm_dashboard( $contactID ) {
    hrd_initialize( );

    $sql = array( );

    $sql[] = "
SELECT 'Contact' as type, c.id as id, c.id as contact_id, c.display_name as title, l.modified_date as date
FROM   civicrm_contact c, civicrm_log l
WHERE  l.entity_table = 'civicrm_contact'
  AND  l.entity_id    = c.id
";

    $sql[] = "
SELECT 'Event' as type, id, null as contact_id, title as title, start_date as date
FROM    civicrm_event
";

    $sql[] = "
SELECT 'Case' as type, id, contact_id, subject as title, start_date as date
FROM   civicrm_case
";

    $sql[] = "
SELECT 'Activity' as type, id, source_contact_id as contact_id, subject as title, activity_date_time as date
FROM   civicrm_activity
";

    $sql[] = "
SELECT 'Grant' as type, id, contact_id, rationale as title, application_received_date as date
FROM   civicrm_grant
";
    
    foreach ( $sql as $id => $s ) {
        $sql[$id] = " ( $s ) ";
    }

    $sql =  implode ( 'UNION', $sql );
    $sql .= " ORDER BY date desc LIMIT 10";

    $dao = CRM_Core_DAO::executeQuery( $sql );
    $values = array( );
    $html = "
<table>
<tr>
<th>Type</th>
<th>Title</th>
<th>Date</th>
</tr>
";
    while ( $dao->fetch( ) ) {
        $title = hrd_make_link( $dao->type, $dao->title, $dao->id, $dao->contact_id );
        $value['type' ] = $dao->type;
        $value['id'   ] = $dao->id;
        $value['title'] = $title;
        $value['date' ] = $dao->date;
        $html .= "
<tr>
<td>{$value['type']}</td>
<td>{$value['title']}</td>
<td>{$value['date']}</td>
</tr>
";
        $values[] = $value;
    }
    
    $html .= "
</table>
";

    return array( ts( 'Latest Transactions' ) => $html );
}

function hrd_make_link( $type, $title, $id, $contactID ) {
    switch ( $type ) {
    case 'Contact':
        $url = CRM_Utils_System::url( 'civicrm/contact/view',
                                      "reset=1&cid={$id}" );
        break;

    case 'Event':
        $url = CRM_Utils_System::url( 'civicrm/event/info',
                                      "reset=1&id={$id}" );
        break;

    case 'Activity':
        $url = CRM_Utils_System::url( 'civicrm/contact/view',
                                      "reset=1&cid={$contactID}&selectedChild=activity" );
        break;

    case 'Case':
    case 'Grant':
    default:
        $url = null;
        break;
    }

    if ( $url ) {
        if ( ! $title ) {
            $title = ts( 'Link' );
        }
        $title = "<a href=\"$url\">$title</a>";
    }
    return $title;
}

function hrd_civicrm_aclWhereClause( $type, &$tables, &$whereTables, &$contactID, &$where ) {
    hrd_initialize( );

    if ( ! empty( $where ) ) {
        $where .= ' AND ';
    } else {
        $where = '';
    }

    // if the contact has permission to access the secure contacts we
    // dont modify the clause
    if ( CRM_Core_Permission::check( 'access secure contacts' ) ) {
        $where .= ' ( 1 ) ';
        return;
    }

    // else modify the query so we can ensure that contactIDs belong to the secure group are not shown
    $groupTable = 'civicrm_group_contact_hrd';
    $tables[$groupTable] = $whereTables[$groupTable] =
        "LEFT JOIN civicrm_group_contact $groupTable ON ( contact_a.id = $groupTable.contact_id AND $groupTable.group_id = 5 )";
    $where .= " ( $groupTable.status is null OR $groupTable.status != 'Added' ) ";
}

function hrd_civicrm_aclGroup( $type, $contactID, $tableName, &$allGroups, &$currentGroups ) {
    hrd_initialize( );

    $currentGroups = $allGroups;

    if ( ! CRM_Core_Permission::check( 'access secure contacts' ) ) {
        unset( $currentGroups[5] );
    }
    $currentGroups = array_keys( $currentGroups );
}



