<?php

/*
 +--------------------------------------------------------------------+
 | CiviCRM version 3.1                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2009                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007.                                       |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License along with this program; if not, contact CiviCRM LLC       |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2009
 * $Id$
 *
 */

  /**
   * freeeze address fields of location type 'Board Of Election' on contact edit form
   *
   * @return void
   * @access public
   */
function civicrm_NYSS_civicrm_buildForm( $formName, &$form ) {
    
    require_once 'CRM/Core/PseudoConstant.php';
    require_once 'CRM/Utils/Request.php';
    require_once 'CRM/Core/BAO/Preferences.php';
    $blocks = array( 'Email'   => 'email',
                     'Phone'   => 'phone',
                     'IM'      => 'im',
                     'OpenID'  => 'openid',
                     'Address' => 'address'
                     );
    if ( ( $formName == 'CRM_Contact_Form_Contact' ) && 
         ( in_array( $form->_action, array( CRM_Core_Action::UPDATE, CRM_Core_Action::ADD ) ) ) ) {
        $locationTypes     = CRM_Core_PseudoConstant::locationType( );
        $boardOfElectionId = CRM_Utils_Array::key( 'Board of Election', $locationTypes );
        $block   = CRM_Utils_Request::retrieve( 'block', 'String', CRM_Core_DAO::$_nullObject );
        $blockId = CRM_Utils_Request::retrieve( 'count', 'Positive', CRM_Core_DAO::$_nullObject ); 
        $blockId = $blockId ? $blockId : 1;
        $addressFlag = 0;
            foreach ( $blocks as $blockName => $val ) {
                if( $blockName == 'Address' ) {
                    $addressFlag = 1;
                    continue;
                }
                //freeze elements if location type is 'Board of Election'
                if ( $form->_values[$val][$blockId]['location_type_id'] == $boardOfElectionId ) { 
                    $freeze = true;
                    //freeze location type element
                    $eName = "{$val}[$blockId][location_type_id]";
                    _civicrm_processElement( &$form, $eName, $freeze );
                    //freeze value of email, phone, openid, IM and address
                    if ( $blockName == 'IM' ) {
                        $eName = "{$val}[$blockId][name]";
                    } else {
                        $eName = "{$val}[$blockId][$val]";
                    }
                    _civicrm_processElement( &$form, $eName, $freeze );
                    //freeze IM provider types/ phone types
                    if ( $blockName == 'Phone' ) {
                        $eName = "{$val}[$blockId][phone_type_id]";
                        _civicrm_processElement( &$form, $eName, $freeze );
                    } else if ( $blockName == 'IM' ) {
                        $eName = "{$val}[$blockId][provider_id]";
                        _civicrm_processElement( &$form, $eName, $freeze );
                    }
                } else {
                    //unset 'Board of Election' from location type options
                    $eName = "{$val}[{$blockId}][location_type_id]";
                    _civicrm_processElement( &$form, $eName ); 
                }
            }
            
            //freeze address elements in address block if location type is 'Board Of Election'
            if ( $addressFlag ) {
                if ( $form->_values['address'][$blockId]['location_type_id'] == $boardOfElectionId ) {
                    //freeze elements 
                    $freeze = true;
                    $eName = "address[$blockId][location_type_id]";
                    _civicrm_processElement( &$form, $eName, $freeze );
                    $addressOptions = CRM_Core_BAO_Preferences::valueOptions( 'address_options', true, null, true );
                    foreach ( $addressOptions as $key => $value ) {
                        if ( empty( $value ) ) {
                            continue;
                        }  
                        if ( in_array( $key, array( 'country', 'state_province' ) ) ) {
                            $key .= '_id';
                            $eName = "address[$blockId][$key]";
                            _civicrm_processElement( &$form, $eName, $freeze );
                        } else {
                            $eName = "address[$blockId][$key]";
                            _civicrm_processElement( &$form, $eName, $freeze );
                        }
                    }
                    //hide 'Use Household Address' if location type is 'Board Of Election'
                    if ( $blockId == 1 ) {
                        $form->removeElement( "use_household_address" );
                    }
                } else {
                    //supress location type 'Board of Election' from location type options
                    $eName = "address[$blockId][location_type_id]";
                    _civicrm_processElement( &$form, $eName );
                }
            }
    }
  }

/**
 * process the elements on the form
 *
 * @return void
 * @access public
 */
function _civicrm_processElement( &$form, $elementName, $freeze = false ) {
    
    if ( ! $form->elementExists( $elementName ) ) {
        return false;
    }
    $element = $form->getElement( $elementName );
    if ( $freeze ) {
        $element->freeze( );
    } else {
        foreach ( $element->_options as $index => $options ) {
            if ( in_array( 'Board of Election', $options ) ) {
                if ( $options['text'] == 'Board of Election' ) {
                    unset( $element->_options[$index] );
                    break;
                }
            }
        }
    }
}