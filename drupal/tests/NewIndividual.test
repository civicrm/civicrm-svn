<?php

class NewIndividualTestCase extends CiviTestCase {

  var $webUser;
  
  function get_info() {
    return array(
      'name' => t('Create Individual'),
      'description' => t('Creates a simple Individual(First Name, Last Name only)'),
      'group' => t('CiviCRM Tests'),
    );
  }
  
  function setUp() {
    parent::setUp();
    $this->drupalModuleEnable('civicrm');

    $this->webUser = $this->drupalCreateUserRolePerm(
                       array ( 0 => 'access CiviCRM',
                               1 => 'edit all contacts',
			       2 => 'add contacts' ) );
    $this->drupalLoginUser($this->webUser);
    
  }
  
  /**
   * Test to create individual with 
   * valid parameters
   */
  function testCreateIndividual() {
      $this->civiGet('civicrm/dashboard', 'reset=1' );
      $this->clickLink('New Individual', '0');
      $first_name  = 'Jane';
      $last_name   = 'Doe';
      // print_r($this->_browser->_page->_raw);exit();
      $params = array( 'first_name' => $first_name,     
                       'last_name'  => $last_name );
      $this->drupalPost( NULL, $params, '_qf_Edit_next');
      $this->assertText('Your Individual contact record has been saved.');
      //      $this->assertText('Last Change by ' . $this->webUser );
      $this->DBAssertNotNull( 'CRM_Contact_DAO_Contact', $last_name . ', ' .$first_name, 'id', 'sort_name',  'Checking database for the record.' );
  }  

  /**
   * Test to create individual with 
   * empty parameters
   */
  function testCreateIndividualWithEmptyParams() {
      $this->civiGet('civicrm/dashboard', 'reset=1' );
      $this->clickLink('New Individual', '0');
      $first_name  = '';
      $last_name   = '';
      $params = array( 'first_name' => $first_name,     
                       'last_name'  => $last_name );

      $this->drupalPost( NULL, $params, '_qf_Edit_next');
      $this->assertWantedRaw( 'First Name and Last Name OR an email OR an OpenID in the Primary Location should be set.', 'New Individual, validations.' );
      $this->assertText('First Name and Last Name OR an email OR an OpenID in the Primary Location should be set.');
      $this->DBAssertNull( 'CRM_Contact_DAO_Contact', $last_name . ', ' .$first_name, 'id', 'sort_name',  'Database check, Individual created successfully.' );
  }  
  
  
}
