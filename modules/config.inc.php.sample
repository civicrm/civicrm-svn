<?php
/**
 * CiviCRM configuration file.
 */

/**
 * Content Management System (CMS) Host:
 *
 * CiviCRM can be hosted in either Drupal or Mambo. Retain the default settings
 * for Drupal.
 * 
 * Settings for Mambo:
 *      define( 'CIVICRM_UF'       , 'Mambo' );
 *      define( 'CIVICRM_UF_URLVAR', 'task'  );
 */
define( 'CIVICRM_UF'               , 'Drupal' );
define( 'CIVICRM_UF_URLVAR'        , 'q'  );

/**
 *
 * Update the CIVICRM_UF_DSN setting to match your Drupal or Mambo database username, server and DB name.
 * Database URL format:
 *      define( 'CIVICRM_UF_DSN', 'mysql://drupal_db_username:drupal_db_password@db_server/drupal_database?new_link=true');
 */
define( 'CIVICRM_UF_DSN'           , 'mysql://drupal:YOUR_PASSWORD@localhost/drupal?new_link=true' );

/** 
 *
 * Update the CIVICRM_UF_USERSTABLENAME if needed to match the name of the table
 * where the CMS user data is stored. For default Drupal installs, this is 'users'.
 * If you are using table-prefixing for the users table, you must enter the tablename
 * with the prefix.
 */ 
define( 'CIVICRM_UF_USERSTABLENAME', 'users' );

/**
 * File system paths for this install:
 *
 * $civicrm_root is the file system path on your server where the civicrm
 * code is installed.
 *
 * CIVICRM_TEMPLATE_COMPILEDIR is the file system path where compiled templates are stored.
 *
 * CIVICRM_UPLOADDIR is the file system path to which CiviCRM files are uploaded.
 *
 * EXAMPLE - CivicSpace / Drupal:
 * If the path to the CivicSpace or Drupal home directory is /var/www/htdocs/civicspace
 * the $civicrm_root setting would be:
 *      $civicrm_root = '/var/www/htdocs/civicspace/modules/civicrm';
 *
 * the CIVICRM_TEMPLATE_COMPILEDIR would be:
 *      define( 'CIVICRM_TEMPLATE_COMPILEDIR', '/var/www/htdocs/civicspace/files/civicrm/templates_c' );
 *
 * and the CIVICRM_UPLOADDIR would be:
 *      define( 'CIVICRM_UPLOADDIR', '/var/www/htdocs/civicspace/files/civicrm/upload' );
 *
 * EXAMPLE - Mambo:
 * If the path to the Mambo home directory is /var/www/htdocs/mambo
 * the $civicrm_root setting would be:
 *      $civicrm_root = '/var/www/htdocs/mambo/administrator/components/com_civicrm/civicrm';
 *
 * the CIVICRM_TEMPLATE_COMPILEDIR would be:
 *      define( 'CIVICRM_TEMPLATE_COMPILEDIR', '/var/www/htdocs/mambo/media/civicrm/templates_c' );
 *
 * and the CIVICRM_UPLOADDIR would be:
 *      define( 'CIVICRM_UPLOADDIR', '/var/www/htdocs/mambo/media/civicrm/upload' );
 *	
 * Please make sure that the COMPILERDIR and UPLOADDIR are created and the
 * web server user has write access to that directory
 *
 */
global $civicrm_root;
$civicrm_root = '/var/www/htdocs/civicspace/modules/civicrm';
define( 'CIVICRM_TEMPLATE_COMPILEDIR', '/var/www/htdocs/civicspace/files/civicrm/templates_c' );
define( 'CIVICRM_UPLOADDIR'          , '/var/www/htdocs/civicspace/files/civicrm/upload/'  );

/**
 * Site URLs:
 *
 * This section defines absolute URLs to access the host CMS (Drupal or Mambo) and CiviCRM.
 * IMPORTANT: Trailing slashes are required for CIVICRM_HTTPBASE and CIVICRM_RESOURCEBASE. 
 *
 * EXAMPLE: if your Drupal site url is http://www.example.com/civicspace/
 * these variables would be set as below. Modify as needed for your install. If you do not
 * have clean url's turned on, make sure CIVICRM_MAINMENU is valid for your install. 
 * e.g. define( 'CIVICRM_MAINMENU'    , '/civicspace?q=civicrm' ) 
 */
define( 'CIVICRM_UF_BASEURL'  , 'http://www.example.com/civicspace/' );
define( 'CIVICRM_HTTPBASE'    , '/civicspace/'                     );
define( 'CIVICRM_RESOURCEBASE', '/civicspace/modules/civicrm/'     );
define( 'CIVICRM_MAINMENU'    , '/civicspace/civicrm'              );

/**
 * CiviCRM Database settings:
 *
 * Define the version of MySQL you are running. 
 * CiviCRM has been optimized for MySQL 4.1, but will also run on many 4.0.x versions.
 * If you are using a 4.0.x release of MySQL, you MUST change CIVICRM_MYSQL_VERSION to 4.0
 *
 * Define the database URL (CIVICRM_DSN) for the CiviCRM database and the Drupal/Mambo database
 * Database URL format:
 *      define( 'CIVICRM_DSN', 'mysql://crm_db_username:crm_db_password@db_server/crm_database?new_link=true');
 *
 * Drupal and CiviCRM can share the same database, or can be installed into separate databases.
 *
 * EXAMPLE: Drupal and CiviCRM running in the same database...
 *      DB Name = drupal, DB User = drupal
 *      define( 'CIVICRM_DSN'         , 'mysql://drupal:YOUR_PASSWORD@localhost/drupal?new_link=true' );
 *
 * EXAMPLE: Drupal and CiviCRM running in separate databases...
 *      Drupal  DB Name = drupal, DB User = drupal
 *      CiviCRM DB Name = civicrm, CiviCRM DB User = civicrm
 *      define( 'CIVICRM_DSN'         , 'mysql://civicrm:YOUR_PASSWORD@localhost/civicrm?new_link=true' );
 *
 * This stores the installed path of mysql
 * define( 'CIVICRM_MYSQL_PATH', '/usr/bin/' );
 *
 */
define( 'CIVICRM_MYSQL_VERSION', 4.1 );
define( 'CIVICRM_DSN'          , 'mysql://civicrm:YOUR_PASSWORD@localhost/civicrm?new_link=true' );
define( 'CIVICRM_MYSQL_PATH', '/opt/mysql4/bin/' );

/**
 * SMTP Server:
 *
 * If you are sending emails to contacts using CiviCRM's simple 'Send Email' functionality
 * uncomment the below line and enter your smtp server address here (e.g.'smtp.example.com'). 
 */
// define( 'CIVICRM_SMTP_SERVER' , 'YOUR SMTP SERVER' );

/**
 * Province availability:
 *
 * CiviCRM ships with a set of provinces derived from the ISO 3166-2 standard;
 * the civicrm_state_province table includes almost 3800 provinces. The
 * CIVICRM_PROVINCE_LIMIT option selects which countries' provinces are
 * available to the users of this CiviCRM install. The format of this option
 * is a space-separated list of country ISO codes (US for United States, PL for
 * Poland, etc.). If you're not sure what is the code for a given country, you
 * can check it in the civicrm_country table and/or the xml/templates/civicrm_country.tpl
 * file. The default limits the province list to United States
 */
define( 'CIVICRM_PROVINCE_LIMIT' , 'US' );


/**
 * Default contact country
 * 
 * When new contact is added, country field can be automatically populated wih
 * chosen value. Use civicrm_country.id (primary key) value. United States is 1228.
 */
define( 'CIVICRM_DEFAULT_CONTACT_COUNTRY_ID' , 1228 );


/**
 * Localisation:
 *
 * Localisation for CiviCRM's user interface is supported via GNU gettext i18n library.
 * Each locale directory contains the translations for that language in .pot and .po files.
 * To switch to a locale other than the default 'en_US', enter the directory name for the
 * new locale (stored below civicrm/l10n directory). Locale format is 'langageCode_countryCode'
 * (e.g. 'pl_PL' for Polish translation).
 */
define( 'CIVICRM_LC_MESSAGES' , 'en_US' );

/**
 * Date formatting:
 *
 * Formats for date display and input fields are configurable. Settings use standard POSIX sequences.
 * Standard U.S. layouts are set by default. Adjust as needed to match your locale/requirements.
 *
 * Refer to CiviCRM Localisation documentation for more info. 
 */ 
define( 'CIVICRM_DATEFORMAT_DATETIME', '%B %E%f, %Y %l:%M %P' );
define( 'CIVICRM_DATEFORMAT_FULL', '%B %E%f, %Y' );
define( 'CIVICRM_DATEFORMAT_PARTIAL', '%B %Y' );
define( 'CIVICRM_DATEFORMAT_YEAR', '%Y' );
define( 'CIVICRM_DATEFORMAT_QF_DATE', '%b %d %Y' );
define( 'CIVICRM_DATEFORMAT_QF_DATETIME', '%b %d %Y, %I : %M %P' );

/**
 * Import - maximum file size:
 *
 * Default maximum Contact Import filesize is 1MB. You may increase this up to a hard-limit of 8MB.
 * However, imports above 1MB will take a 'long time' and are server resource intensive.
 * File size is expressed in bytes (1MB is entered as 1048576).
 */
define( 'CIVICRM_MAX_IMPORT_FILESIZE' , 1048576);

/**
 * Map Contacts with Google Maps API:
 * 
 * If you want to utilize the Google mapping feature, you must request an API key for your site
 * here: http://www.google.com/apis/maps/signup.html
 *
 * When prompted for 'My Web Site URL' - enter the url for your CiviCRM menu followed by
 * the path '/contact/search'. You API Key will be generated and displayed on the next page.
 *
 * EXAMPLE: if your Drupal site url is http://www.example.com/civicspace/ you would enter
 * 'http://www.example.com/civicspace/civicrm/contact/search'
 *
 * Enter your API key below to enable the mapping feature for your CiviCRM installation.
 * 
 * IMPORTANT: You must enable some form of Geocode lookup (see next section) for mapping to
 * function, since the mapping API requires latitude and longitude to be populated for
 * contacts' addresses.
 */
define('CIVICRM_GOOGLE_MAP_API_KEY', '');

/**
 * Geocode (latitude and longitude) lookup:
 *
 * CiviCRM can be configured to automatically lookup and insert geo-coordinates for contact
 * addresses. The current version offers two methods for this lookup:
 * - local lookup in the Drupal zipcodes table (requires this table to be installed in the
 *   civicrm_db)
 *      define('CIVICRM_GEOCODE_METHOD', 'CRM_Utils_Geocode_ZipTable' );
 *
 * - remote lookup using geocoder.us
 *      define('CIVICRM_GEOCODE_METHOD', 'CRM_Utils_Geocode_RPC' );
 *
 * NOTE: The default Geocode_RPC implementation queries the geocoder.us service. This may
 * result in significant overhead, especially for import operations.
 *
 * You may also create and call your own class using the interface defined at
 * 'CRM_Utils_Geocode_API'.
 */
define('CIVICRM_GEOCODE_METHOD', '' );

/**
 * Multi-site Support
 *
 * CiviCRM uses Domain ID keys to allow you to store separate data sets for multiple sites
 * using the same codebase.
 *
 * Refer to the 'Multi-site Support' section of the Installation Guide for more info.
 */
define('CIVICRM_DOMAIN_ID' , 1 );

/**
 * Debugging
 *
 * Enable CIVICRM_DEBUG (value = 1) when you need to use one of the debug-related tools. These are 
 * triggered via URL parameters - IF CIVICRM_DEBUG is turned on.
 *
 * Debugging tools:
 * Smarty Debug Window - Loads all variables available to the current page template into a pop-up
 * window. To trigger, add '&smartyDebug=1' to any CiviCRM URL query string.
 *
 * Session Reset - Resets all values in your client session. To trigger, add '&sessionReset=2'
 *
 * Directory Cleanup - Empties template cache and/or upload file folders.
 *  To empty template cache (civicrm/templates_c folder), add '&directoryCleanup=1'
 *  To remove temporary upload files (civicrm/upload folder), add '&directoryCleanup=2'
 *  To cleanup both, add '&directoryCleanup=3'
 *
 * WARNING: Do not leave debugging enabled by default as it can be used to expose configuration
 * information to unauthorized browsers.
 */
define( 'CIVICRM_DEBUG', 0 );
 

/**
 * Mailer settings
 *
 * CIVICRM_MAILER_SPOOL_PERIOD -  Number of seconds between delivery attempts
 * for new outgoing mailings. (Used for CiviMail only.)
 */
define( 'CIVICRM_MAILER_SPOOL_PERIOD', 180);


include_once 'config.main.php';

?>
